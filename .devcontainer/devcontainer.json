// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-in-docker
{
	"name": "Confidential ACI Dev",
	"dockerFile": "Dockerfile",
	"context": "..",
	"hostRequirements": {
		"memory": "8gb"
	},
	"features": {
		"ghcr.io/devcontainers/features/docker-in-docker:2": {
			"version": "latest",
			"enableNonRootDocker": "true",
			"moby": "true"
		},
		"ghcr.io/devcontainers/features/python:1": {
			"installTools": true,
			"version": "latest"
		}
	},
	"remoteEnv": {
		"PYTHONPATH": "/workspaces/confidential-aci-examples"
	},
	"customizations": {
		"vscode": {
			"extensions": [
				"eamodio.gitlens",
				"GitHub.copilot",
				"ms-python.black-formatter",
				"ms-python.python",
				"GitHub.vscode-github-actions",
				"tsandall.opa"
			],
			"settings": {
				"python.testing.unittestArgs": [
					"-v",
					"-s",
					"./examples",
					"-p",
					"*.py"
				],
				"python.testing.pytestEnabled": false,
				"python.testing.unittestEnabled": true,
				"python.envFile": "${workspaceFolder}/env",
				"python.defaultInterpreterPath": "/usr/local/python/current/bin/python",
				"python.formatting.blackPath": "/usr/local/py-utils/bin/black"
			},
			"json.schemas": [
				{
					"fileMatch": [
						"examples/*/manifest.json"
					],
					"schema": {
						"$schema": "http://json-schema.org/draft-07/schema#",
						"type": "object",
						"properties": {
							"testName": {
								"type": "string"
							},
							"images": {
								"type": "object"
							},
							"containerGroups": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"containers": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"image": {
														"type": "string"
													},
													"ports": {
														"type": "array",
														"items": {
															"type": "number"
														}
													},
													"cores": {
														"type": "number"
													},
													"ram": {
														"type": "number"
													},
													"env": {
														"type": "object",
														"additionalProperties": {
															"type": [
																"string",
																"object"
															]
														}
													},
													"command": {
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												},
												"required": [
													"image",
													"ports",
													"cores",
													"ram"
												],
												"additionalProperties": false
											}
										},
										"ports": {
											"type": "array",
											"items": {
												"type": "number"
											}
										}
									},
									"required": [
										"containers",
										"ports"
									],
									"additionalProperties": false
								}
							},
							"securityPolicies": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"registryCredentials": {
								"type": "object",
								"additionalProperties": {
									"type": "object",
									"properties": {
										"username": {
											"type": "string"
										},
										"password": {
											"type": "string"
										}
									},
									"required": [
										"username",
										"password"
									]
								}
							},
							"preDeployScript": {
								"type": "string"
							}
						},
						"required": [
							"testName",
							"images",
							"containerGroups",
							"securityPolicies",
							"registryCredentials"
						],
						"additionalProperties": false
					}
				}
			]
		}
	},
	"postCreateCommand": "./setup.sh"
}