name: _Build and Push Container Images

on:
  workflow_call:
    inputs:
      test:
        description: "Test to build and push images for"
        required: true
        type: string

jobs:

  get-images-to-build:
    name: Get Images to Build (TODO)
    runs-on: ubuntu-latest
    outputs:
      image_to_tag: '["Dockerfile:latest"]'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

  build-and-push-image:
    name: Build and Push Images
    runs-on: ubuntu-latest
    needs: get-images-to-build
    strategy:
      matrix:
        image_to_tag: ${{ fromJson(needs.get-images-to-build.outputs.image_to_tag) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZ_REGISTRY_LOGIN }}
          username: ${{ secrets.AZ_REGISTRY_USERNAME }}
          password: ${{ secrets.AZ_REGISTRY_PASSWORD }}

      - name: Get Docker Info
        id: docker-info
        run: |
          echo DOCKERFILE_CONTEXT=tests/${{ inputs.test }} >> $GITHUB_ENV
          echo "::set-output name=file::$(echo ${{ matrix.image_to_tag }} | cut -d':' -f1 )"
          echo "::set-output name=tag::$(echo ${{ matrix.image_to_tag }} | cut -d':' -f2 )"

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        env:
          DOCKERFILE_CONTEXT: ${{ env.DOCKERFILE_CONTEXT }}
        with:
          context: ${{ env.DOCKERFILE_CONTEXT }}
          file: tests/${{ inputs.test }}/${{ steps.docker-info.outputs.file }}
          push: true
          tags: |
            ${{ vars.REGISTRY }}/${{ inputs.test }}:${{ steps.docker-info.outputs.tag }}
