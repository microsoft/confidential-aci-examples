name: _Deploy and Run Test

on:
  workflow_call:
    inputs:
      test:
        description: "Test to run"
        required: true
        type: string
      location:
        description: "Location to deploy ACI to"
        required: true
        type: string
      image:
        description: "Image to deploy to ACI"
        required: true
        type: string
      security-policy-artifact-name:
        description: "Security policy artifact name containing all policies"
        required: true
        type: string
      security-policy:
        description: "Security Policy to use for ACI"
        required: true
        type: string

jobs:
  generate-unique-name:
    name: Generate Unique Name (${{ inputs.test }}/${{ inputs.location }}/${{ inputs.security-policy }})
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.generate-name.outputs.container-group-name }}
    steps:
      - name: Generate Unique Container Group Name
        id: generate-name
        run: |
          DASHCASE=$(echo ${{ inputs.test }} | sed 's/_/-/g')
          echo "::set-output name=container-group-name::$(echo $DASHCASE-${{ inputs.location }}-$(shuf -i 1-100000000 -n 1))"

  _1:
    uses: ./.github/workflows/_generate_arm_template.yml
    needs: generate-unique-name
    secrets: inherit
    with:
      label: ${{ inputs.test }}/${{ inputs.location }}/${{ inputs.security-policy }}
      container-group-name: ${{ needs.generate-unique-name.outputs.name }}
      location: ${{ inputs.location }}
      image: ${{ inputs.image }}
      security-policy-artifact-name: ${{ inputs.security-policy-artifact-name }}
      security-policy: ${{ inputs.security-policy }}
      artifact-name: ${{ needs.generate-unique-name.outputs.name }}_arm_template

  _2:
    uses: ./.github/workflows/_deploy_container.yml
    secrets: inherit
    needs: [generate-unique-name, _1]
    with:
      label: ${{ inputs.test }}/${{ inputs.location }}/${{ inputs.security-policy }}
      arm-template: ${{ needs.generate-unique-name.outputs.name }}_arm_template
      deployment-name: ${{ needs.generate-unique-name.outputs.name }}-deployment

  _3:
    uses: ./.github/workflows/_client_side_test.yml
    secrets: inherit
    needs: [generate-unique-name, _2]
    with:
      label: ${{ inputs.test }}/${{ inputs.location }}/${{ inputs.security-policy }}
      test: ${{ inputs.test }}
      deployment-name: ${{ needs.generate-unique-name.outputs.name }}-deployment

  _4:
    uses: ./.github/workflows/_remove_container.yml
    secrets: inherit
    needs: [generate-unique-name, _3]
    if: always()
    with:
      label: ${{ inputs.test }}/${{ inputs.location }}/${{ inputs.security-policy }}
      deployment-name: ${{ needs.generate-unique-name.outputs.name }}-deployment
