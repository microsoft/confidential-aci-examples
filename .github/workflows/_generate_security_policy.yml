name: _Generate Security Policy

on:
  workflow_call:
    inputs:
      image:
        description: "Image to deploy to ACI"
        required: true
        type: string
      test:
        description: "Name of the test to put the policy in"
        required: true
        type: string
      artifact-name:
        description: "Name of the generated template artifact"
        required: true
        type: string

jobs:
  generate-security-policy:
    name: Generate Security Policy (${{ inputs.test }})
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: az extension add --name confcom

      - name: Generate ARM Template
        id: generate-arm-template
        run: |
          python infra/generate_arm_template.py \
            --container-group-name "not-relevant" \
            --location "not-relevant" \
            --image ${{ inputs.image }} \
            --registry-password ${{ secrets.AZ_REGISTRY_PASSWORD }} \
            --out arm_template.json

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZ_REGISTRY_LOGIN }}
          username: ${{ secrets.AZ_REGISTRY_USERNAME }}
          password: ${{ secrets.AZ_REGISTRY_PASSWORD }}

      - name: Set Docker Permissions
        run: sudo usermod -aG docker $USER

      - name: Make Security Policies Directory
        run: mkdir -p tests/${{ inputs.test }}/security_policies

      - name: Generate Security Policy
        id: generate-security-policy
        run: |
          az confcom acipolicygen \
              -a arm_template.json \
              --outraw \
              --save-to-file tests/${{ inputs.test }}/security_policies/_generated.rego

      - name: Upload Security Policy Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact-name }}
          path: tests/${{ inputs.test }}/security_policies
