name: Generate Security Policy

on:
  workflow_call:
    inputs:
      container-group-name:
        description: "Name of the container group to deploy"
        required: true
        type: string
      location:
        description: "Location to deploy ACI to"
        required: true
        type: string
      image:
        description: "Image to deploy to ACI"
        required: true
        type: string
      artifact-name:
        description: "Name of the generated template artifact"
        required: true
        type: string

jobs:
  generate-security-policy:
    runs-on: ubuntu-latest
    outputs:
      policy_generated: true
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: az extension add --name confcom

      - name: Generate ARM Template
        id: generate-arm-template
        run: |
          python infra/generate_arm_template.py \
            --container-group-name ${{ inputs.container-group-name }} \
            --location ${{ inputs.location }} \
            --image ${{ inputs.image }} \
            --registry-password ${{ secrets.AZ_REGISTRY_PASSWORD }} \
            --out arm_template.json

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZ_REGISTRY_LOGIN }}
          username: ${{ secrets.AZ_REGISTRY_USERNAME }}
          password: ${{ secrets.AZ_REGISTRY_PASSWORD }}

      - name: Set Docker Permissions
        run: sudo usermod -aG docker $USER

      - name: Generate Security Policy
        id: generate-security-policy
        run: |
          az confcom acipolicygen \
              -a arm_template.json \
              --outraw \
              --save-to-file security_policy.rego

      - name: Upload Security Policy Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.artifact-name }}
          path: security_policy.rego
