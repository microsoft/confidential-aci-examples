name: Push Container Images

on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: true
      manifest:
        type: string
        required: true
    outputs:
      image-urls:
        value: ${{ jobs.build-and-push-image.outputs.image-urls }}

jobs:
  process-manifest:
    name: Get Images to Build
    runs-on: ubuntu-latest
    outputs:
      test-name: ${{ steps.get-test-name.outputs.test-name }}
      images: ${{ steps.get-images-to-build.outputs.images }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Decrypt Manifest
        run: |
          echo -e "${{ secrets.DECRYPTION_KEY }}" | gpg --import
          echo -e "${{ inputs.manifest }}" | gpg --decrypt > manifest.json

      - name: Get Test Name
        id: get-test-name
        run: echo "test-name=$(cat manifest.json | jq '.testName')" >> $GITHUB_OUTPUT

      - name: Get Images to Build
        id: get-images-to-build
        run: echo "images=$(python infra/read_manifest_images.py manifest.json)" >> $GITHUB_OUTPUT

  build-and-push-image:
    name: Build and Push Images
    runs-on: ubuntu-latest
    needs: process-manifest
    if: ${{ needs.process-manifest.outputs.images != '[]' }}
    outputs:
      image-urls: ${{ steps.parse-image-info.outputs.encrypted-image-url }}
    strategy:
      matrix:
        images: ${{ fromJson(needs.process-manifest.outputs.images) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Import GPG Key
        run: echo -e "${{ secrets.ENCRYPTION_KEY }}" | gpg --import

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_REGISTRY_URL }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Parse Image Info
        id: parse-image-info
        run: |
          repository=$(echo ${{ matrix.images }} | cut -d':' -f1)
          echo "image-url=${{ secrets.AZURE_REGISTRY_URL }}/${{ needs.process-manifest.outputs.test-name }}/$repository:${{ inputs.tag }}" >> $GITHUB_OUTPUT
          echo "encrypted-image-url=$(echo $image-url | gpg --armor --encrypt --no-tty --batch --trust-model always -r "Github Actions <\" \">" | sed ':a;N;$!ba;s/\n/\\n/g')" >> $GITHUB_OUTPUT
          echo "docker-file=$(echo ${{ matrix.images }} | cut -d':' -f2)" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        env:
          DOCKERFILE_CONTEXT: examples/${{ needs.process-manifest.outputs.test-name }}
        with:
          context: examples
          file: examples/${{ steps.parse-image-info.outputs.docker-file }}
          push: true
          tags: |
            ${{ steps.parse-image-info.outputs.image-url }}
