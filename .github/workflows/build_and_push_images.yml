name: Build and Push Container Images

on:
  workflow_dispatch:
    inputs:
      id:
        description: "Unique Identifier for this run"
        required: true
        type: string
      test:
        description: "Test to build and push images for"
        required: true
        type: string
      manifest:
        description: "The Manifest to push Images for"
        type: string
        default: ""
        required: false
  workflow_call:
    inputs:
      id:
        description: "Unique Identifier for this run"
        required: true
        type: string
      test:
        description: "Test to build and push images for"
        required: true
        type: string
      manifest:
        description: "The Manifest to push Images for"
        type: string
        default: ""
        required: false

jobs:
  resolve-manifest:
    name: Resolve Manifest Variables
    uses: ./.github/workflows/_resolve_manifest.yml
    if: ${{ inputs.manifest != '' }}
    secrets: inherit
    with:
      manifest: examples/${{ inputs.test }}/manifest.json

  get-images-to-build:
    name: Get Images to Build
    runs-on: ubuntu-latest
    needs: resolve-manifest
    outputs:
      images: ${{ steps.get-images-to-build.outputs.images }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Decrypt Manifest
        run: |
          echo -e "${{ secrets.DECRYPTION_KEY }}" | gpg --import
          manifest=${${{ inputs.manifest }}:-${{ needs.resolve-manifest.outputs.manifest }}}
          echo -e "$manifest" | gpg --decrypt > manifest.json

      - name: Get Images to Build
        id: get-images-to-build
        run: |
          echo "images=$(python infra/read_manifest_images.py manifest.json)" >> $GITHUB_OUTPUT

  build-and-push-image:
    name: Build and Push Images
    runs-on: ubuntu-latest
    needs: get-images-to-build
    if: ${{ needs.get-images-to-build.outputs.images != '[]' }}
    strategy:
      matrix:
        images: ${{ fromJson(needs.get-images-to-build.outputs.images) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.AZURE_REGISTRY_URL }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Get Docker Info
        id: docker-info
        run: |
          echo "repository=$(echo ${{ matrix.images }} | cut -d':' -f1 )" >> $GITHUB_OUTPUT
          echo "file=$(echo ${{ matrix.images }} | cut -d':' -f2 )" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        env:
          DOCKERFILE_CONTEXT: examples/${{ inputs.test }}
        with:
          context: examples
          file: examples/${{ steps.docker-info.outputs.file }}
          push: true
          tags: |
            ${{ secrets.AZURE_REGISTRY_URL }}/${{ inputs.test }}/${{ steps.docker-info.outputs.repository }}:${{ inputs.id }}
