name: Client Side Test

on:
  workflow_dispatch:
    inputs:
      id:
        description: "Unique Identifier for this run"
        required: true
        type: string
      test:
        description: "Test to run"
        required: true
        type: choice
        options:
          - simple_server
      location:
        description: "Location to deploy to"
        required: true
        type: string
      security-policy:
        description: "Security policy to use for ACI"
        required: true
        type: string
  workflow_call:
    inputs:
      id:
        description: "Unique Identifier for this run"
        required: true
        type: string
      test:
        description: "Test to run"
        required: true
        type: string
      location:
        description: "Location to deploy to"
        required: true
        type: string
      security-policy:
        description: "Security policy to use for ACI"
        required: true
        type: string

jobs:
  client-side-test:
    name: Client Side Test (${{ inputs.location }}/${{ inputs.security-policy }})
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Generate Matrix Cell Name
        id: generate-name
        run: echo "::set-output name=name::$(echo ${{ inputs.test }}-${{ inputs.location }}-${{ inputs.security-policy }}-${{ inputs.id }} | md5sum | sed 's/ //g' | sed 's/-//g')"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Log into Azure
        run: |
          az login --service-principal \
            --username ${{ secrets.SP_APP_ID }} \
            --password ${{ secrets.SP_PASSWORD }} \
            --tenant ${{ secrets.SP_TENANT }}

      - name: Check Container is Running
        run: |
          # Check if the container is running and if so exit successfully
          [[ $(az container show \
            --name group-${{ steps.generate-name.outputs.name }} \
            --resource-group ${{ secrets.AZ_RESOURCE_GROUP }} \
            --query "instanceView.state" \
          ) == "Running" ]] && exit 0

          # Otherwise print the full state of the container and exit with an error
          az container show \
            --name group-${{ steps.generate-name.outputs.name }} \
            --resource-group ${{ secrets.AZ_RESOURCE_GROUP }}
          exit 1

      - name: Run Tests
        env:
          DEPLOYMENT_NAME: deployment-${{ steps.generate-name.outputs.name }}
          AZ_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
          AZ_RESOURCE_GROUP: ${{ secrets.AZ_RESOURCE_GROUP }}
          CLEANUP_ACI: 0
        run: |
          python -m unittest discover \
            -s tests/${{ inputs.test }} \
            -p '*.py' \
            -v
