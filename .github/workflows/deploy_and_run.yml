name: End to End Test

on:
  workflow_call:
    inputs:
      test:
        description: "Test to run"
        required: true
        type: string
      dash-case:
        description: "Dash Case Version of Test to run"
        required: true
        type: string
      location:
        description: "Location to deploy ACI to"
        required: true
        type: string
      image:
        description: "Image to deploy to ACI"
        required: true
        type: string
      security-policy-artifact-name:
        description: "Security policy artifact name containing all policies"
        required: true
        type: string
      security-policy:
        description: "Security Policy to use for ACI"
        required: true
        type: string

jobs:
  generate-arm-template:
    uses: ./.github/workflows/_generate_arm_template.yml
    secrets: inherit
    with:
      container-group-name: ${{ inputs.dash-case }}-${{ inputs.location }}-${{ github.run_id }}
      location: ${{ inputs.location }}
      image: ${{ inputs.image }}
      security-policy-artifact-name: ${{ inputs.security-policy-artifact-name }}
      security-policy: ${{ inputs.security-policy }}
      artifact-name: ${{ inputs.test }}_${{ inputs.location }}_arm_template

  deploy-container:
    uses: ./.github/workflows/deploy_container.yml
    secrets: inherit
    needs: generate-arm-template
    with:
      test: ${{ inputs.test }}
      location: ${{ inputs.location }}

  run-test:
    runs-on: ubuntu-latest
    needs: deploy-container
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Log into Azure
        run: |
          az login --service-principal \
            --username ${{ secrets.SP_APP_ID }} \
            --password ${{ secrets.SP_PASSWORD }} \
            --tenant ${{ secrets.SP_TENANT }}

      - name: Run Tests
        env:
          CONTAINER_NAME: ${{ inputs.test }}-${{ inputs.location }}-${{ github.run_id }}
          AZ_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
          AZ_RESOURCE_GROUP: ${{ secrets.AZ_RESOURCE_GROUP }}
          CLEANUP_ACI: 0
        run: |
          python -m unittest \
            tests.${{ inputs.test }}.${{ inputs.test }}_test \
            -v

  remove-container:
    uses: ./.github/workflows/remove_container.yml
    secrets: inherit
    needs: run-test
    if: always()
    with:
      test: ${{ inputs.test }}
      location: ${{ inputs.location }}
