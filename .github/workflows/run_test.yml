name: Run Test

on:
  workflow_dispatch:
    inputs:
      test:
        description: "Test to run"
        required: true
        type: choice
        options:
          - simple_server
      location:
        description: "Location to deploy ACI to"
        required: false
        type: string
  workflow_call:
    inputs:
      test:
        description: "Test to run"
        required: true
        type: string
      locations:
        description: "Locations to run the test"
        default: '["eastus2euap", "westeurope"]'
        required: false
        type: string

jobs:
  build-and-push-image:
    uses: ./.github/workflows/_build_and_push_image.yml
    secrets: inherit
    with:
      label: ${{ inputs.test }}
      dockerfile: tests/${{ inputs.test }}/Dockerfile
      tag: ${{ vars.REGISTRY }}/${{ inputs.test }}:latest

  generate-security-policy:
    uses: ./.github/workflows/_generate_security_policy.yml
    needs: build-and-push-image
    secrets: inherit
    with:
      image: ${{ vars.REGISTRY }}/${{ inputs.test }}:latest
      test: ${{ inputs.test }}
      artifact-name: ${{ inputs.test }}_security_policies

  find-all-security-policies:
    name: Find Security Policies (${{ inputs.test }})
    runs-on: ubuntu-latest
    needs: generate-security-policy
    outputs:
      security-policies: ${{ steps.find-policies.outputs.security-policies }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Security Policy Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.test }}_security_policies
          path: security_policies

      - name: Find All Security Policies
        id: find-policies
        run: |
          echo "name=security-policies::[$(find security_policies -name '*.rego' -exec basename {} \; | awk '{printf "\"%s\", ", $0}' | sed 's/, $//')]"
          echo "::set-output name=security-policies::[$(find security_policies -name '*.rego' -exec basename {} \; | awk '{printf "\"%s\", ", $0}' | sed 's/, $//')]"

  deploy-and-run-test:
    uses: ./.github/workflows/_deploy_and_run.yml
    needs: [find-all-security-policies, generate-security-policy]
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        location: ${{ fromJson(inputs.locations) }}
        security-policy: ${{ fromJson(needs.find-all-security-policies.outputs.security-policies) }}
    with:
      test: ${{ inputs.test }}
      location: ${{ matrix.location }}
      image: ${{ vars.REGISTRY }}/${{ inputs.test }}:latest
      security-policy-artifact-name: ${{ inputs.test }}_security_policies
      security-policy: ${{ matrix.security-policy }}
