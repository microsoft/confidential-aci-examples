name: Test Attestation

on:
  workflow_call:
    inputs:
      sidecar_registry:
        description: "The registry to get the image from"
        required: true
        default: http://confidentialsidecars.azurecr.io
        type: string
      attestation-image:
        description: "The image of the Attestation sidecar to use"
        required: false
        default: "attestation:main"
        type: string
  workflow_dispatch:
    inputs:
      sidecar_registry:
        description: "The registry to get the image from"
        required: true
        type: choice
        options: 
          - http://confidentialsidecars.azurecr.io
      attestation-image:
        description: "The image of the Attestation sidecar to use"
        required: false
        default: "attestation:main"
        type: string
  repository_dispatch:
    types:
      - attestation-test
  push:
    branches:
      - main
    paths:
      - .github/workflows/**
      - infra/**
      - examples/attestation/**
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/**
      - infra/**
      - examples/attestation/**
  merge_group:
    branches:
      - main
  schedule:
    - cron: "0 7 * * *"

jobs:
  resolve-image:
    name: Resolve Sidecar Image
    runs-on: ubuntu-latest
    outputs:
      manifest-modifiers: ${{ steps.resolve-image.outputs.manifest-modifiers }}
    steps:
      - name: Define Image to Use
        id: resolve-image
        env:
          SIDECAR_REGISTRY: ${{ inputs.sidecar_registry }}
          ATTESTATION_SIDECAR_IMAGE: ${{ inputs.attestation-image }}
          REPO_DISPATCH_TAG: ${{ github.event.client_payload.image_tag }}
        run: |
          if [ -z "$SIDECAR_REGISTRY" ]; then
            SIDECAR_REGISTRY="http://confidentialsidecars.azurecr.io"
          fi
          if [ -n "$REPO_DISPATCH_TAG" ]; then
            ATTESTATION_SIDECAR_IMAGE="attestation:$REPO_DISPATCH_TAG"
          elif [ -z "$ATTESTATION_SIDECAR_IMAGE" ]; then
            ATTESTATION_SIDECAR_IMAGE="attestation:main"
          fi
          echo "manifest-modifiers=ATTESTATION_SIDECAR_IMAGE=$SIDECAR_REGISTRY/$ATTESTATION_SIDECAR_IMAGE" >> $GITHUB_OUTPUT

  pipeline-link-comment:
    name: Create Pipeline Link Comment in PR
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest
    env:
      RUN_ID: ${{ github.run_id }}
      PR_NUMBER: ${{ github.event.client_payload.pr_number }}
    steps:
      - name: Create Pipeline Link Repo Dispatch Request
        run: |
          curl --fail-with-body -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.ACC_REPO_DISPATCH_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/microsoft/confidential-sidecar-containers/dispatches \
          -d '{"event_type":"pipeline-link-comment","client_payload":{"pipeline_link":"https://github.com/microsoft/confidential-aci-examples/actions/runs/$RUN_ID","pr_number":"$PR_NUMBER"}}'

  attestation:
    name: Attestation
    uses: ./.github/workflows/test_example.yml
    needs: resolve-image
    secrets: inherit
    with:
      example-name: attestation
      manifest-modifiers: ${{ needs.resolve-image.outputs.manifest-modifiers }}
