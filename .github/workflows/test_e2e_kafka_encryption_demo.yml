name: Test E2E Kafka Encryption Example

on:
  workflow_call:
    inputs:
      example-name:
        description: Name of example to test
        type: string
      locations:
        description: Locations to deploy containers to
        default: '["eastus"]'
        type: string
      manifest-modifiers:
        description: Modifications to environment for the manifest
        type: string
  workflow_dispatch:
    inputs:
      example-name:
        description: Name of example to test
        type: string
      locations:
        description: Locations to deploy containers to
        default: '["eastus"]'
        type: string
      manifest-modifiers:
        description: Modifications to environment for the manifest
        type: string

jobs:

  resolve-manifest:
    name: Resolve Manifest Variables
    uses: ./.github/workflows/_resolve_manifest.yml
    secrets: inherit
    with:
      manifest: examples/${{ inputs.example-name }}/manifest.json
      modifiers: ${{ inputs.manifest-modifiers }}

  prepare:
    name: Prepare Test
    runs-on: ubuntu-latest
    needs: resolve-manifest
    outputs:
      id: ${{ steps.generate-id.outputs.id }}
      images: ${{ steps.get-images.outputs.images }}
      security-policies: ${{ steps.get-security-policies.outputs.security-policies }}
    steps:
      - name: Get Workflow ID
        id: generate-id
        run: echo "id=$(openssl rand -hex 8 | tr -d '\n')" >> $GITHUB_OUTPUT

      - name: Decrypt Manifest
        run: |
          echo -e "${{ secrets.DECRYPTION_KEY }}" | gpg --import
          echo -e "${{ needs.resolve-manifest.outputs.manifest }}" | gpg --decrypt > manifest.json
             
  test-deployment:
    name: Test Deployment
    uses: ./.github/workflows/_test_deployment.yml
    needs: [prepare, resolve-manifest]
    secrets: inherit
    strategy:
      fail-fast: false
      matrix:
        location: ${{ fromJson(inputs.locations) }}
        security-policy: ${{ fromJson(needs.prepare.outputs.security-policies) }}
    with:
      id: ${{ needs.prepare.outputs.id }}
      manifest: ${{ needs.resolve-manifest.outputs.manifest}}
      location: ${{ matrix.location }}
      security-policy: ${{ matrix.security-policy }}