name: Test HTTP Server

# Set permissions to allow logging into Azure
permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-http-server:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log into Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.MANAGED_ID_CLIENT_ID }}
        tenant-id: ${{ secrets.MANAGED_ID_TENANT_ID }}
        subscription-id: ${{ secrets.SUBSCRIPTION }}

    - name: Setup Docker
      run: sudo usermod -aG docker $USER

    - name: Install c_aci_testing package
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        latest=$(gh release list -R microsoft/confidential-aci-testing -L 1 --json tagName --jq '.[0].tagName')
        gh release download $latest -R microsoft/confidential-aci-testing
        pip install c-aci-testing*.tar.gz

    - name: Build Images
      env:
        REGISTRY: caciexamples.azurecr.io
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: python -m c_aci_testing.images_build examples/http_server

    - name: Push Images
      env:
        REGISTRY: caciexamples.azurecr.io
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: python -m c_aci_testing.images_push examples/http_server

    - name: Generate Policies
      env:
        REGISTRY: caciexamples.azurecr.io
        TAG: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: python -m c_aci_testing.policies_gen examples/http_server

    - name: Deploy Container Groups
      env:
        SUBSCRIPTION: ${{ secrets.SUBSCRIPTION }}
        RESOURCE_GROUP: c-aci-examples
        MANAGED_IDENTITY: caciexamples
        LOCATION: northeurope
        DEP_NAME: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: python -m c_aci_testing.aci_deploy examples/http_server -n $DEP_NAME

    - name: Monitor Container Groups
      env:
        SUBSCRIPTION: ${{ secrets.SUBSCRIPTION }}
        RESOURCE_GROUP: c-aci-examples
        DEP_NAME: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: |
        curl http://$(python -m c_aci_testing.aci_get_ips -n $DEP_NAME):80

    - name: Cleanup Container Groups
      if: always()
      env:
        SUBSCRIPTION: ${{ secrets.SUBSCRIPTION }}
        RESOURCE_GROUP: c-aci-examples
        DEP_NAME: ${{ github.run_id }}-${{ github.job }}-${{ github.run_number }}
      run: python -m c_aci_testing.aci_remove -n $DEP_NAME
