name: Uptime of Containers on East US 2 EUAP

on:
  workflow_dispatch:

env:
  UPTIME_HRS: 48

jobs:
  get-datetime:
    runs-on: ubuntu-latest
    outputs:
      datetime: ${{ steps.get-datetime.outputs.datetime }}
    steps:
      - name: Get Datetime
        id: get-datetime
        run: echo "datetime=$(date -u +"%Y-%m-%dT%H-%M-%SZ")" >> $GITHUB_OUTPUT

  check-current-containers:
    runs-on: ubuntu-latest
    steps:
      - name: Check Current Containers
        run: |
          echo "Checking current containers"

  remove-old-container:
    runs-on: ubuntu-latest
    steps:
      - name: Remove Old Containers
        run: |
          echo "Removing old containers"

      # - name: Log into Azure
      #   run: |
      #     az login --service-principal \
      #       --username ${{ secrets.SP_APP_ID }} \
      #       --password ${{ secrets.SP_PASSWORD }} \
      #       --tenant ${{ secrets.SP_TENANT }}

      # - name: Delete Old Container Groups
      #   run: |
      #     CONTAINERS=$(az container list \
      #       --resource-group ${{ secrets.AZ_RESOURCE_GROUP }} \
      #       --query "[?starts_with(name, 'uptime-')]")

      #     for container in $(echo $CONTAINERS | jq -r '.[].name'); do
      #         creationTimeString="${container#uptime-}"
      #         creationTime=$(date -u -d "$creationTimeString" +"%s")
      #         containerAge=$(( ($(date -u +"%s") - creationTime) / 3600 ))
      #         if [ $containerAge -gt $UPTIME_HRS ]; then
      #             echo "Deleting container group: ${container}"
      #             az resource delete --resource-group ${{ secrets.AZ_RESOURCE_GROUP }} --name ${container} --resource-type Microsoft.ContainerInstance/containerGroups
      #         fi
      #     done

  prep-deployment:
    runs-on: ubuntu-latest
    needs: get-datetime
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Generate ARM Template
        env:
          AZ_REGISTRY_PASSWORD: ${{ secrets.AZ_REGISTRY_PASSWORD }}
        run: |
          python infra/generate_arm_template.py \
            --name uptime-${{ needs.get-datetime.outputs.datetime }} \
            --image-tag latest \
            --manifest-path tests/simple_server/manifest.json \
            --location eastus2euap \
            --security-policy "$(cat tests/simple_server/security_policies/allow_all.rego | base64)" \
            --out arm_template.json

      - name: Generate Matrix Cell Name
        id: generate-name
        run: echo "name=$(echo simple_server-eastus2euap-allow_all.rego-${{ needs.get-datetime.outputs.datetime }} | md5sum | sed 's/ //g' | sed 's/-//g')" >> $GITHUB_OUTPUT

      - name: Upload ARM Template Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.generate-name.outputs.name }}_arm_template
          path: arm_template.json

  deploy-new-container:
    uses: ./.github/workflows/deploy_container.yml
    needs: [check-current-containers, get-datetime, prep-deployment]
    secrets: inherit
    with:
      id: ${{ needs.get-datetime.outputs.datetime }}
      test: simple_server
      location: eastus2euap
      security-policy: allow_all.rego
