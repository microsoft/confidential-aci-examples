{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Build and Push Images",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/infra/build_and_push_images.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--manifest-path",
                "examples/${input:testName}/manifest.json",
                "--image-tag",
                "${input:imageTag}",
            ]
        },
        {
            "name": "Generate Container ARM Template",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/infra/container/generate_arm_template.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--image-tag",
                "${input:imageTag}",
                "--manifest",
                "examples/${input:testName}/manifest.json",
                "--location",
                "${input:containerLocation}",
                "--out",
                "examples/${input:testName}/${input:armTemplateName}"
            ]
        },
        {
            "name": "Generate and Add Security Policy",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/infra/generate_security_policy.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--arm-template-path",
                "examples/${input:testName}/${input:armTemplateName}",
                "--out",
                "examples/${input:testName}/_generated.rego",
            ]
        },
        {
            "name": "Add Security Policy To ARM Template",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/infra/add_security_policy_to_arm_template.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--arm-template-path",
                "examples/${input:testName}/${input:armTemplateName}",
                "--security-policy-path",
                "${input:securityPolicyPath}",
            ]
        },
        {
            "name": "Deploy ARM Template",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/infra/deploy_arm_template.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--manifest-path",
                "examples/${input:testName}/manifest.json",
                "--arm-template-path",
                "examples/${input:testName}/${input:armTemplateName}",
            ]
        },
        {
            "name": "Delete Deployment",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/infra/delete_deployment.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--deployment-name",
                "${input:deploymentName}",
                "--arm-template-path",
                "examples/${input:testName}/${input:armTemplateName}",
                "--asynchronous",
            ]
        },
        {
            "name": "------------------",
            "type": "python",
            "request": "launch",
            "program": "examples/simple_server/__init__.py",
            "console": "integratedTerminal",
            "justMyCode": true,
        },
        {
            "name": "Deploy HSM",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/infra/deploy_hsm.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--name",
                "${input:hsmName}",
            ]
        },
        {
            "name": "Deploy Storage Container",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/infra/deploy_storage_container.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--name",
                "${input:storageAccountName}",
                "--location",
                "${input:containerLocation}",
                "--container-name",
                "${input:storageContainerName}",
            ]
        },
        {
            "name": "------------------",
            "type": "python",
            "request": "launch",
            "program": "examples/simple_server/__init__.py",
            "console": "integratedTerminal",
            "justMyCode": true,
        },
        {
            "name": "Generate VM ARM Template",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/infra/vm/generate_arm_template.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--location",
                "${input:containerLocation}",
                "--manifest-path",
                "examples/${input:testName}/manifest.json",
                "--out",
                "examples/${input:testName}/${input:armTemplateName}"
            ]
        },
        {
            "name": "Deploy Container Platform",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/infra/vm/deploy_containerplat.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--arm-template-path",
                "examples/${input:testName}/${input:armTemplateName}",
            ]
        },
        {
            "name": "Run Container Platform",
            "type": "python",
            "request": "launch",
            "program": "${workspaceFolder}/infra/vm/run_containerplat.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--arm-template-path",
                "examples/${input:testName}/${input:armTemplateName}",
            ]
        },
    ],
    "inputs": [
        {
            "id": "testName",
            "type": "pickString",
            "description": "Enter the name of the test:",
            "options": [
                "simple_server",
                "simple_sidecar",
                "attestation",
                "remote_image",
                "key_release",
                "encrypted_filesystem",
            ],
        },
        {
            "id": "containerLocation",
            "type": "promptString",
            "description": "Enter the location of the container:",
            "default": "westeurope",
        },
        {
            "id": "imageTag",
            "type": "promptString",
            "description": "Enter the tag of the images:",
        },
        {
            "id": "armTemplateName",
            "type": "promptString",
            "default": "arm_template.json",
            "description": "Enter the name of the ARM template:",
        },
        {
            "id": "securityPolicyPath",
            "type": "promptString",
            "description": "Enter the path to Security Policy file:",
            "default": "policies/allow_all.rego"
        },
        {
            "id": "deploymentName",
            "type": "promptString",
            "description": "Enter name of the deployment:",
        },
        {
            "id": "hsmName",
            "type": "promptString",
            "description": "Enter name of the hsm:",
        },
        {
            "id": "storageAccountName",
            "type": "promptString",
            "description": "Enter a name for the storage account:",
        },
        {
            "id": "storageContainerName",
            "type": "promptString",
            "description": "Enter a name for the storage container:",
        },
    ]
}